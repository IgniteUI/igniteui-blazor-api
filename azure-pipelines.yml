trigger:
- master

pool:
 name: BuildAgentOnPrem

#- task: MSBuild@1
#  inputs:
#    solution: '**/*.sln'
#    msbuildVersion: '17.0'
#    msbuildArchitecture: 'x64'
#    platform: 'AnyCPU'
#    clean: true
#    maximumCpuCount: true
#    restoreNugetPackages: true

steps:
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '6.2.x' # we are using a legacy (according to Microsoft) feed so we don't want the newest nuget.exe

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(Build.SourcesDirectory)\app\blazor-app.csproj'
    feedsToUse: 'config'
    externalFeedCredentials: 'IG ProGet IgniteUINuGet - Staging'
    noCache: true'

- task: UseDotNet@2
  displayName: 'Install dotnet sdk'
  inputs:
    packageType: 'sdk'
    version: '6.0.101' # we are using a legacy (according to Microsoft) feed so we don't want the newest dotnet.exe
    performMultiLevelLookup: false

#- task: CmdLine@1
#  displayName: 'Run dotnet in blazor app'
#  inputs:
#    filename: dotnet
#    arguments: 'build --force'
#    workingFolder: '

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--no-restore'
    workingDirectory: '$(Build.SourcesDirectory)\app'

- task: NodeTool@0
  inputs:
    versionSource: 'spec'
    versionSpec: '18.x'

- task: Npm@0
  displayName: 'npm install'
  inputs:
    cwd: '$(Build.SourcesDirectory)'
- task: CmdLine@1
  displayName: 'npm run build'
  inputs:
    filename: npm
    arguments: 'run build'

# TODO: Add pipeline artifact publishing
# TODO: Discuss with Maya if we need any other steps here.
